{"version":3,"file":"static/js/961.90d76b15.chunk.js","mappings":"kPAMe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OALAC,QAAQC,IAAIN,IACZO,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAmBR,GAASS,KAAKL,KAChC,CAACJ,IACJK,QAAQC,IAAIH,IAEV,2BACGA,IACC,wBACGA,EAAMO,KAAI,SAAAC,GAAI,OACb,2BACE,wBAAKA,EAAKC,QACV,gBACEC,IACEF,EAAKG,aAAL,UAnBD,oCAmBC,OACkBH,EAAKG,cACnBC,EAENC,IAAKL,EAAKM,MACVC,MAAM,MACNC,OAAO,UAVFR,EAAKS,UAgBpB,SAAC,KAAD,S,0MClCAC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,oCAAuCF,IADzD,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiC3B,GAAjC,uFACkBuB,IAAAA,IAAA,iBACXvB,EADW,oBACQqB,EADR,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B5B,GAA9B,uFACkBuB,IAAAA,IAAA,iBACXvB,EADW,4BACgBqB,EADhB,oBADlB,cACCG,EADD,yBAKEA,EAASC,KAAKd,MALhB,kEAQA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC7B,GAAjC,uFACkBuB,IAAAA,IAAA,iBACXvB,EADW,4BACgBqB,EADhB,2BADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOC,GAAxC,uFACkBT,IAAAA,IAAA,4DACgCF,EADhC,kBACiDU,EADjD,gCAC8EC,EAD9E,yBADlB,cACCR,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEA9BPH,IAAAA,SAAAA,QAAyB,iC","sources":["components/views/Casts/Casts.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport Picture from './default.jpg';\nimport * as API from 'services/api';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  console.log(movieId);\n  useEffect(() => {\n    API.fetchCastMovie(movieId).then(setCasts);\n  }, [movieId]);\n  console.log(casts);\n  return (\n    <div>\n      {casts && (\n        <ul>\n          {casts.map(cast => (\n            <li key={cast.id}>\n              <h1>{cast.name}</h1>\n              <img\n                src={\n                  cast.profile_path\n                    ? `${BASE_URL}${cast.profile_path}`\n                    : Picture\n                }\n                alt={cast.title}\n                width=\"100\"\n                height=\"150\"\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n    </div>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '0b3a2577ef47ebb117f3888c8be479cf';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchPopularMovies() {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCastMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n}\n\nexport async function fetchReviewsMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query, page) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n\n  return response.data.results;\n}\n"],"names":["Cast","movieId","useParams","useState","casts","setCasts","console","log","useEffect","API","then","map","cast","name","src","profile_path","Picture","alt","title","width","height","id","API_KEY","fetchPopularMovies","axios","response","data","results","fetchMovieDetails","fetchCastMovie","fetchReviewsMovie","fetchSearchMovies","query","page"],"sourceRoot":""}